; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "OBS Studio Portable PTZ"
#define MyAppVersion "0.1"
#define MyAppPublisher "Jimcom USA"
#define MyAppURL "https://www.jimcom.us/obs-studio-portable/"
#define MyAppExeName "start_obs.bat"
#define MySourceLocation "D:\GitHub\OBS-Studio-Portable-PTZ"
#define MyBuildLocation "D:\GitHub\PortableBuild"
#define MyProfileLocation "D:\OBS\OBS Studio Portable PTZ"
#define MyDiscordServer "https://discord.gg/c5NWCrWK22"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{1EC107CA-61E8-4184-A4DD-F7A2BB48D812}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName=c:\OBS\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
LicenseFile={#MySourceLocation}\portable\LICENSE
InfoBeforeFile={#MySourceLocation}\portable\README.rtf
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
PrivilegesRequiredOverridesAllowed=dialog
OutputDir={#MyBuildLocation}
OutputBaseFilename=OBSStudioPortable
; Password=12345
; Encryption=yes
Compression=lzma
SolidCompression=yes
WizardStyle=modern
Uninstallable=no
UsePreviousAppDir=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "{#MySourceLocation}\assets\*"; DestDir: "{app}\assets\"; Components: assets; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\portable\*"; DestDir: "{app}"; Components: main; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\LiveVisionKit\*"; DestDir: "{app}"; Components: livevision; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\Animated-Lower-Thirds\*"; DestDir: "{app}"; Components: lower3rds; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\FaceTracker\*"; DestDir: "{app}"; Components: facetracking; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\OBS_BackgroundRemoval\*"; DestDir: "{app}"; Components: background; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\OBS-NDI\*"; DestDir: "{app}"; Components: ndi; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\StreamFX\*"; DestDir: "{app}"; Components: streamfx; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\PTZControls\*"; DestDir: "{app}"; Components: ptz; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\OBS-WebSocket\*"; DestDir: "{app}"; Components: main; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "{#MySourceLocation}\OBS-Studio\*"; DestDir: "{app}"; Components: main; Flags: ignoreversion recursesubdirs createallsubdirs

; msvc-redist-helper.exe is used by and created StreamFX team to make sure propoer dependencies exist
Source: "{#MySourceLocation}\Inno Setup File\msvc-redist-helper.exe"; DestDir: "{app}"; Components: main; Flags: ignoreversion dontcopy
 
; Calls MyUpdateAllStrings() after each file more to update JSON files if included
Source: "{#MySourceLocation}\assets\profile\*"; DestDir: "{app}\assets\profile\"; Components: assets; AfterInstall: MyUpdateAllStrings; Flags: ignoreversion recursesubdirs createallsubdirs

; NOTE: Don't use "Flags: ignoreversion" on any shared system files

[Components]
; Name: "main"; Description: "OBS Studio"; Types: full compact custom; Flags: fixed
Name: "main"; Description: "OBS Studio"; Types: full compact custom
Name: "ptz"; Description: "PTZ Controls"; Types: full compact custom
Name: "ndi"; Description: "NDI Support - Install of NDI Tools still required from NDI.tv"; Types: full compact custom
Name: "streamfx"; Description: "Streamfx Support - May Need additional Installs"; Types: full custom
Name: "lower3rds"; Description: "Lower Thirds - See Video for configuration support"; Types: full compact custom
Name: "background"; Description: "Background Removal Support"; Types: full compact custom
Name: "livevision"; Description: "Live Vision Kit - Image Stabilization and more"; Types: full compact custom
Name: "assets"; Description: "Useful and Learning assets - install if you follow video Jimcom USA tutorials"; Types: full compact custom
Name: "facetracking"; Description: "[**EXPERIMENTAL**] FaceTracking PlugIn"; Types: full custom


[Icons]
; Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}}"; Filename: "{#MyAppURL}"
Name: "{group}\{cm:ProgramOnTheWeb,{#MyAppName}} Discord"; Filename: "{#MyDiscordServer}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon

[Code]
// ------------------------------------------------------------------------------------------------------------------ //
procedure FileReplaceString(FileName: string; SearchString: string; ReplaceString: string);
var
  MyFile : TStrings;
  MyText : string;
begin
  MyFile := TStringList.Create;

  try
    

    try
      MyFile.LoadFromFile(FileName);
      MyText := MyFile.Text;

      { Only save if text has been changed. }
      if StringChangeEx(MyText, SearchString, ReplaceString, True) > 0 then
      begin;
        log(MyText);
        MyFile.Text := MyText;
        MyFile.SaveToFile(FileName);
      end;
    except
      
    end;
  finally
    MyFile.Free;
  end;
end;

// ------------------------------------------------------------------------------------------------------------------ //
function PrepareToInstall(var NeedsRestart: Boolean): String;
var
	iResultCode: Integer;
begin
	// Also ensure that we have the necessary prerequisites installed to run the program.
  // This is required as part of StreamFX for MS Windows Support
    ExtractTemporaryFile('msvc-redist-helper.exe');
    Exec(ExpandConstant('{tmp}\msvc-redist-helper.exe'), '2019', '', SW_HIDE, ewWaitUntilTerminated, iResultCode);
end;

// ------------------------------------------------------------------------------------------------------------------ //
// JumpToURL() is sample code of how to use a message box to jump to a URL
// This will be levered in future released to better tag dependencies and where to find them such as NDI Tool Kit, etc. 
function JumpToURL(): Boolean;
var
  ErrCode: integer;
begin
  if MsgBox('Your system requires an update supplied by Microsoft. Would you like to visit the download page now?', mbConfirmation, MB_YESNO) = IDYES
  then begin
    ShellExec('open', 'http://www.microsoft.com/?s=1B0BFB35-C252-43CC-8A2A-6A64D6AC4670&displaylang=en',
      '', '', SW_SHOW, ewNoWait, ErrCode);
  end;
  Result := False;
end;

// ------------------------------------------------------------------------------------------------------------------ //
// Utility to take the CurrentFilename and "operate" on it, in this case to update JSON with new absolute paths
// for import into OBS Studio, this will allow for flexible sample Scene Collections to demostrate some features
procedure MyUpdateAllStrings();
var
  MyInstDir: string;
  MyInstDirFS: string;
  MyAppDir: string;
begin
  MyInstDir := ExpandConstant('{app}');
  MyInstDirFS := MyInstDir;
  MyAppDir := ExpandConstant('{#MyProfileLocation}');
  StringChangeEx(MyInstDir, '\', '\\', True);
  StringChangeEx(MyInstDirFS, '\', '/', True);
  StringChangeEx(MyAppDir, '\', '/', True);
  

  Log('*********************************************');
  Log('CurrentFilename: '+CurrentFilename);
  Log('My Install Dir: '+MyInstDir);
  Log('My ExpandConstant({#MyProfileLocation}) Dir: '+ExpandConstant('{#MyProfileLocation}'));
  Log('My {#MyProfileLocation} Dir: '+'{#MyProfileLocation}');
  
  //FileReplaceString(ExpandConstant('{app}\assets\profile\Jimcom_USA_Training.json'), 'XXXXXXX', 'file:///'+MyInstDir+'\\lower thirds\\control-panel.html');
  FileReplaceString(ExpandConstant(CurrentFilename), MyAppDir, MyInstDirFS);


  //JumpToURL();

end;


[Run]
Filename: "https://www.ndi.tv/form-windows-tools-ndi5"; Components: streamfx; Flags: shellexec runasoriginaluser postinstall; Description: "[ACTION REQUIRED] Download NDI Tools from NTI.tv for OBS NDI Feature";
Filename: "{#MyDiscordServer}"; Flags: shellexec runasoriginaluser postinstall; Description: "Check out Jimcom USA OBS Studio's support Discord server (Support for this install)";
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: shellexec postinstall skipifsilent

